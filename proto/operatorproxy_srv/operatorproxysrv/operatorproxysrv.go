// Code generated by goctl. DO NOT EDIT.
// Source: operatorproxy_srv.proto

package operatorproxysrv

import (
	"context"

	"cocogame-max/chickenroad2_srv/proto/operatorproxy_srv/pb_operatorproxy"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Req_BetLevels      = pb_operatorproxy.Req_BetLevels
	Req_CashAdd        = pb_operatorproxy.Req_CashAdd
	Req_CashAdjustment = pb_operatorproxy.Req_CashAdjustment
	Req_CashGet        = pb_operatorproxy.Req_CashGet
	Req_CashSub        = pb_operatorproxy.Req_CashSub
	Req_CurrencyLevel  = pb_operatorproxy.Req_CurrencyLevel
	Req_GetOperatorKey = pb_operatorproxy.Req_GetOperatorKey
	Req_Test           = pb_operatorproxy.Req_Test
	Req_VerifyOperator = pb_operatorproxy.Req_VerifyOperator
	Req_VerifySession  = pb_operatorproxy.Req_VerifySession
	Res_BetLevels      = pb_operatorproxy.Res_BetLevels
	Res_CashAdd        = pb_operatorproxy.Res_CashAdd
	Res_CashAdjustment = pb_operatorproxy.Res_CashAdjustment
	Res_CashGet        = pb_operatorproxy.Res_CashGet
	Res_CashSub        = pb_operatorproxy.Res_CashSub
	Res_CurrencyLevel  = pb_operatorproxy.Res_CurrencyLevel
	Res_GetOperatorKey = pb_operatorproxy.Res_GetOperatorKey
	Res_Ok             = pb_operatorproxy.Res_Ok
	Res_Test           = pb_operatorproxy.Res_Test
	Res_VerifyOperator = pb_operatorproxy.Res_VerifyOperator
	Res_VerifySession  = pb_operatorproxy.Res_VerifySession

	OperatorProxySrv interface {
		// 验证会话
		VerifySession(ctx context.Context, in *Req_VerifySession, opts ...grpc.CallOption) (*Res_VerifySession, error)
		// 得到钱包
		CashGet(ctx context.Context, in *Req_CashGet, opts ...grpc.CallOption) (*Res_CashGet, error)
		// 加钱
		CashAdd(ctx context.Context, in *Req_CashAdd, opts ...grpc.CallOption) (*Res_CashAdd, error)
		// 扣钱
		CashSub(ctx context.Context, in *Req_CashSub, opts ...grpc.CallOption) (*Res_CashSub, error)
		// 金币调整
		CashAdjustment(ctx context.Context, in *Req_CashAdjustment, opts ...grpc.CallOption) (*Res_CashAdjustment, error)
		// 验证运营商
		VerifyOperator(ctx context.Context, in *Req_VerifyOperator, opts ...grpc.CallOption) (*Res_VerifyOperator, error)
		// 获取运营商秘钥
		GetOperatorKey(ctx context.Context, in *Req_GetOperatorKey, opts ...grpc.CallOption) (*Res_GetOperatorKey, error)
		// 请求CurrencyLevel
		CurrencyLevel(ctx context.Context, in *Req_CurrencyLevel, opts ...grpc.CallOption) (*Res_CurrencyLevel, error)
		// ------------------------------------------------------------------------
		TestVerifySession(ctx context.Context, in *Req_Test, opts ...grpc.CallOption) (*Res_Test, error)
		// test:得到钱包
		TestCashGet(ctx context.Context, in *Req_Test, opts ...grpc.CallOption) (*Res_Test, error)
		// test:加钱
		TestCashAdd(ctx context.Context, in *Req_Test, opts ...grpc.CallOption) (*Res_Test, error)
		// test:扣钱
		TestCashSub(ctx context.Context, in *Req_Test, opts ...grpc.CallOption) (*Res_Test, error)
		// test:BadAction
		TestBadAction(ctx context.Context, in *Req_Test, opts ...grpc.CallOption) (*Res_Test, error)
		// test:Echo
		TestEcho(ctx context.Context, in *Req_Test, opts ...grpc.CallOption) (*Res_Test, error)
	}

	defaultOperatorProxySrv struct {
		cli zrpc.Client
	}
)

func NewOperatorProxySrv(cli zrpc.Client) OperatorProxySrv {
	return &defaultOperatorProxySrv{
		cli: cli,
	}
}

// 验证会话
func (m *defaultOperatorProxySrv) VerifySession(ctx context.Context, in *Req_VerifySession, opts ...grpc.CallOption) (*Res_VerifySession, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.VerifySession(ctx, in, opts...)
}

// 得到钱包
func (m *defaultOperatorProxySrv) CashGet(ctx context.Context, in *Req_CashGet, opts ...grpc.CallOption) (*Res_CashGet, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.CashGet(ctx, in, opts...)
}

// 加钱
func (m *defaultOperatorProxySrv) CashAdd(ctx context.Context, in *Req_CashAdd, opts ...grpc.CallOption) (*Res_CashAdd, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.CashAdd(ctx, in, opts...)
}

// 扣钱
func (m *defaultOperatorProxySrv) CashSub(ctx context.Context, in *Req_CashSub, opts ...grpc.CallOption) (*Res_CashSub, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.CashSub(ctx, in, opts...)
}

// 金币调整
func (m *defaultOperatorProxySrv) CashAdjustment(ctx context.Context, in *Req_CashAdjustment, opts ...grpc.CallOption) (*Res_CashAdjustment, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.CashAdjustment(ctx, in, opts...)
}

// 验证运营商
func (m *defaultOperatorProxySrv) VerifyOperator(ctx context.Context, in *Req_VerifyOperator, opts ...grpc.CallOption) (*Res_VerifyOperator, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.VerifyOperator(ctx, in, opts...)
}

// 获取运营商秘钥
func (m *defaultOperatorProxySrv) GetOperatorKey(ctx context.Context, in *Req_GetOperatorKey, opts ...grpc.CallOption) (*Res_GetOperatorKey, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.GetOperatorKey(ctx, in, opts...)
}

// 请求CurrencyLevel
func (m *defaultOperatorProxySrv) CurrencyLevel(ctx context.Context, in *Req_CurrencyLevel, opts ...grpc.CallOption) (*Res_CurrencyLevel, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.CurrencyLevel(ctx, in, opts...)
}

// ------------------------------------------------------------------------
func (m *defaultOperatorProxySrv) TestVerifySession(ctx context.Context, in *Req_Test, opts ...grpc.CallOption) (*Res_Test, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.TestVerifySession(ctx, in, opts...)
}

// test:得到钱包
func (m *defaultOperatorProxySrv) TestCashGet(ctx context.Context, in *Req_Test, opts ...grpc.CallOption) (*Res_Test, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.TestCashGet(ctx, in, opts...)
}

// test:加钱
func (m *defaultOperatorProxySrv) TestCashAdd(ctx context.Context, in *Req_Test, opts ...grpc.CallOption) (*Res_Test, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.TestCashAdd(ctx, in, opts...)
}

// test:扣钱
func (m *defaultOperatorProxySrv) TestCashSub(ctx context.Context, in *Req_Test, opts ...grpc.CallOption) (*Res_Test, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.TestCashSub(ctx, in, opts...)
}

// test:BadAction
func (m *defaultOperatorProxySrv) TestBadAction(ctx context.Context, in *Req_Test, opts ...grpc.CallOption) (*Res_Test, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.TestBadAction(ctx, in, opts...)
}

// test:Echo
func (m *defaultOperatorProxySrv) TestEcho(ctx context.Context, in *Req_Test, opts ...grpc.CallOption) (*Res_Test, error) {
	client := pb_operatorproxy.NewOperatorProxySrvClient(m.cli.Conn())
	return client.TestEcho(ctx, in, opts...)
}
