// Code generated by goctl. DO NOT EDIT.
// Source: login_srv.proto

package loginsrv

import (
	"context"

	"cocogame-max/chickenroad2_srv/proto/login_srv/pb_login"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Req_Alive = pb_login.Req_Alive
	Req_Login = pb_login.Req_Login
	Res_Alive = pb_login.Res_Alive
	Res_Login = pb_login.Res_Login

	LoginSrv interface {
		Login(ctx context.Context, in *Req_Login, opts ...grpc.CallOption) (*Res_Login, error)
		Alive(ctx context.Context, in *Req_Alive, opts ...grpc.CallOption) (*Res_Alive, error)
	}

	defaultLoginSrv struct {
		cli zrpc.Client
	}
)

func NewLoginSrv(cli zrpc.Client) LoginSrv {
	return &defaultLoginSrv{
		cli: cli,
	}
}

func (m *defaultLoginSrv) Login(ctx context.Context, in *Req_Login, opts ...grpc.CallOption) (*Res_Login, error) {
	client := pb_login.NewLoginSrvClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultLoginSrv) Alive(ctx context.Context, in *Req_Alive, opts ...grpc.CallOption) (*Res_Alive, error) {
	client := pb_login.NewLoginSrvClient(m.cli.Conn())
	return client.Alive(ctx, in, opts...)
}
